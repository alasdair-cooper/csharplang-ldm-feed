name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build:
    name: '🛠️ build'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.API_IMAGE_NAME }}
          file: src/api/Dockerfile

  deploy:
    name: '🚀 deploy'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Copy files to VPS
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" --exclude='.git*' --exclude='artifacts/' --exclude='obj/' ./ $VPS_SSH_DESTINATION:~/csharplang-ldm-feed/
          
      - name: Write .env file
        run: |
          ssh -o StrictHostKeyChecking=no $VPS_SSH_DESTINATION "echo '${{ secrets.COMPOSE_ENV }}' > ~/csharplang-ldm-feed/.env"

      - name: Deploy with Podman Compose
        run: >
          ssh -o StrictHostKeyChecking=no $VPS_SSH_DESTINATION "
          cd ~/csharplang-ldm-feed 
          && podman login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} 
          && podman compose pull 
          && podman compose up --force-recreate --build -d 
          && podman image prune -f"
